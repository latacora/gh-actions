name: Compute Version Identifier

on:
  - push
  - workflow_call

env:
  # A reusable workflow has no way to access files in its own repo, as far as I can tell. So
  # anything and everything you’re going to use in your steps must be in this yaml file. This was
  # the only idea I had to work around this limitation. It’s not great, I know. But it does seem to
  # work. (“composite actions” *can* access files in their own repo, but they have an entirely
  # different, and massive, set of constraints. e.g. they can’t call other actions.)
  script: |
    #!/usr/bin/env bb

    #_{:clj-kondo/ignore [:namespace-name-mismatch]}
    (ns latacora.github-actions.workflows.version
      (:require [clojure.java.shell :as shell]
                [clojure.string :as str])
      (:import [java.time Instant ZoneId]
              java.time.format.DateTimeFormatter))


    (def date-str
      (-> (DateTimeFormatter/ofPattern "yyyyMMdd")
          (.withZone (ZoneId/of "America/Chicago"))
          (.format (Instant/now))))


    (defn git
      [& args]
      (let [proc (apply shell/sh (cons "git" args))]
        (if (zero? (:exit proc))
          (str/trim (:out proc))
          (do (println (:err proc))
              (System/exit 1)))))


    (defn -main
      [& _args]
      (let [branch-name (git "rev-parse" "--abbrev-ref" "HEAD")
            short-hash (git "rev-parse" "--short" "HEAD")
            untracked-files? (not (str/blank? (git "ls-files" "--others" "--exclude-standard" ".")))
            changed-files? (not (str/blank? (git "diff" "--name-only")))
            staged-files? (not (str/blank? (git "diff" "--cached" "--name-only")))
            worktree-clean? (not (or untracked-files? changed-files? staged-files?))
            version-str (format "%s-%s-%s%s"
                                date-str
                                branch-name
                                short-hash
                                (if worktree-clean? "" "-UNCLEAN"))]
        (when-not worktree-clean?
          (.println *err* (str "worktree unclean:"
                              (when untracked-files? " untracked files;")
                              (when changed-files? " changed files;")
                              (when staged-files? " staged files;"))))
        (print version-str)))


    (when (= *file* (System/getProperty "babashka.file"))
      (apply -main *command-line-args*))


jobs:
  compute:
    outputs:
      version_id: ${{ steps.version.id }}
    permissions:
      contents: read
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install babashka
        uses: DeLaGuardo/setup-clojure@9.5
        with:
          bb: 0.9.162

      - name: Write the script out to a file
        run: |
          tmpdir="${{ runner.temp }}"
          echo "$script" > $tmpdir/version.bb
          chmod +x $tmpdir/version.bb

      - name: Compute version ID
        id: version
        run: |
          tmpdir="${{ runner.temp }}"
          version_id=$($tmpdir/version.bb)
          echo "Computed version identifier: ${version_id}"
          echo "::set-output name=id::${version_id}"
